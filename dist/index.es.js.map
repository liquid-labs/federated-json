{"version":3,"file":"index.es.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/lib/utils.js","../src/lib/federated-json.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n* Package internal utility functions.\n*/\nconst replaceRE = /\\$\\{([A-Za-z_][A-Za-z0-9_]*)\\}/g\n\n/**\n* Replaces constructs like '${FOO}' with the environment value of 'FOO' (or whatever key is used). Will raise an\n* exception if no value is found for a given key.\n*/\nconst envTemplateString = (path) => {\n  const origPath = path // used for error messages\n  const matches = [...path.matchAll(replaceRE)]\n  matches.reverse() // The reverse allows us to use the start and end indexes without messing up the string.\n  for (const matchInfo of matches) {\n    const match = matchInfo[0]\n    const key = matchInfo[1]\n    const value = process.env[key]\n    const matchStart = matchInfo.index\n    if (value === undefined) {\n      throw new Error(`No such environment parameter '${key}' found in path replacement: '${origPath}'.`)\n    }\n    path = path.substring(0, matchStart) + value + path.substring(matchStart + match.length)\n  }\n\n  return path\n}\n\nexport { envTemplateString }\n","/**\n* Library that builds a single JSON object from multiple JSON files. As each file is loaded, we check\n* `_meta/com.liquid-labs.federated-data/mountSpecs`. Each spec consists of a `dataPath` and `dataFile` element. The\n* data path is split on '/' and each element is treated as a string. Therefore, the path is compatible with object keys\n* but does not support arrays.\n*/\nimport * as fs from 'fs'\n\nimport { envTemplateString } from './utils'\n\nconst FJSON_META_DATA_KEY = 'com.liquid-labs.federated-json'\n\n/**\n* Adds or updates a mount point entry. WARNING: This method does not currently support sub-mounts. These must be\n* manually updated by accessing the sub-data structure and modifying it's mount points directly.\n*/\nconst addMountPoint = (data, dataPath, dataFile) => {\n  let mountSpecs = getMountSpecs(data)\n\n  if (mountSpecs === undefined) {\n    mountSpecs = []\n    const myMeta = ensureMyMeta(data)\n    if (myMeta.mountSpecs === undefined) {\n      myMeta.mountSpecs = mountSpecs\n    }\n  }\n\n  const i = mountSpecs.findIndex((el) => el.dataPath === dataPath)\n  const mountSpec = { dataPath : dataPath, dataFile }\n  if (i !== -1) {\n    mountSpecs[i] = mountSpec\n  }\n  else {\n    mountSpecs.push(mountSpec)\n  }\n}\n\n/**\n* Reads a JSON file and processes for federated mount points to construct a composite JSON object from one or more\n* files.\n*/\nconst readFJSON = (filePath, options) => {\n  const { rememberSource } = options || {}\n\n  const processedPath = envTemplateString(filePath)\n  if (!fs.existsSync(processedPath)) {\n    const msg = `No such file: '${filePath}'` + (filePath !== processedPath ? ` ('${processedPath}')` : '')\n    throw new Error(msg)\n  }\n  const dataBits = fs.readFileSync(processedPath)\n  const data = JSON.parse(dataBits)\n\n  if (rememberSource) {\n    setSource(data, filePath)\n  }\n\n  for (const mntSpec of getMountSpecs(data) || []) {\n    const { dataFile, mountPoint, finalKey } = processMountSpec(mntSpec, data)\n    const subData = readFJSON(dataFile)\n\n    mountPoint[finalKey] = subData\n  }\n\n  for (const lnkSpec of getLinkSpecs(data) || []) {\n    const { finalRef, source, keyName, penultimateRef, finalKey } = processLinkSpec(lnkSpec, data)\n\n    const getRealItem = (soure, keyName, key) =>\n      source.find((candidate) => candidate[keyName] === key)\n        || throw new Error(`Cannot find link '${key}' in '${lnkSpec.linkTo}'.`)\n\n    if (Array.isArray(finalRef)) { // replace the contents\n      const realItems = finalRef.map((key) => getRealItem(source, keyName, key))\n      finalRef.splice(0, finalRef.length, ...realItems)\n    }\n    else if (typeof finalRef === 'object') {\n      for (const key of Object.keys(finalRef)) {\n        finalRef[key] = getRealItem(source, keyName, key)\n      }\n    }\n    else { // it's a single key\n      penultimateRef[finalKey] = getRealItem(source, keyName, finalRef)\n    }\n  }\n\n  return data\n}\n\n/**\n* Set's the meta source information.\n*/\nconst setSource = (data, filePath) => {\n  const myMeta = ensureMyMeta(data)\n  myMeta.sourceFile = filePath\n}\n\n/**\n* Writes a standard or federated JSON file by analysing the objects meta data and breaking the saved files up\n* accourding to the configuration.\n*/\nconst writeFJSON = (data, filePath) => {\n  if (filePath === undefined) {\n    const myMeta = getMyMeta(data)\n    filePath = myMeta && myMeta.sourceFile\n  }\n  if (!filePath) {\n    throw new Error('No explicit filePath provided and no source found in object meta data.')\n  }\n\n  const mountSpecs = getMountSpecs(data)\n  if (mountSpecs) {\n    for (const mntSpec of mountSpecs) {\n      const { mountPoint, finalKey } = processMountSpec(mntSpec, data)\n\n      const subData = mountPoint[finalKey]\n      mountPoint[finalKey] = null\n\n      writeFJSON(subData, mntSpec.dataFile)\n    }\n  }\n\n  const dataString = JSON.stringify(data)\n  const processedPath = envTemplateString(filePath)\n  fs.writeFileSync(processedPath, dataString)\n}\n\nconst getMyMeta = (data) => data._meta && data._meta[FJSON_META_DATA_KEY]\n\nconst ensureMyMeta = (data) => {\n  let myMeta = getMyMeta(data)\n  if (!myMeta) {\n    if (data._meta === undefined) { data._meta = {} }\n    if (data._meta[FJSON_META_DATA_KEY] === undefined) { data._meta[FJSON_META_DATA_KEY] = {} }\n    myMeta = getMyMeta(data)\n  }\n\n  return myMeta\n}\n\n/**\n* Internal function to test for and extract mount specs from the provided JSON object.\n*/\nconst getMountSpecs = (data) => getMyMeta(data)?.mountSpecs\n\n/**\n* Internal function to process a mount spec into useful components utilized by the `readFJSON` and `writeFJSON`.\n*/\nconst processMountSpec = (mntSpec, data) => {\n  let { dataPath, dataFile } = mntSpec\n\n  dataFile = envTemplateString(dataFile)\n\n  const { penultimateRef: mountPoint, finalKey } = processJSONPath(dataPath, data)\n\n  return { dataFile, mountPoint, finalKey }\n}\n\n/**\n* Internal function to test for and extract link specs from the provided JSON object.\n*/\nconst getLinkSpecs = (data) => getMyMeta(data)?.linkSpecs\n\n/**\n* Internal function to process a link spec into useful components utilized by the `readFJSON` and `writeFJSON`.\n*/\nconst processLinkSpec = (lnkSpec, data) => {\n  const { linkRefs, linkTo, linkKey: keyName } = lnkSpec\n\n  const { finalRef, penultimateRef, finalKey } = processJSONPath(linkRefs, data)\n  const { finalRef: source } = processJSONPath(linkTo, data)\n\n  return { finalRef, source, keyName, penultimateRef, finalKey }\n}\n\nconst processJSONPath = (path, data) => {\n  const pathTrail = path.split('/')\n  const finalKey = pathTrail.pop()\n  if (finalKey === undefined) {\n    throw new Error('Path must specify at least one key.')\n  }\n\n  let penultimateRef = data // not necessarily penultimate yet, but will be...\n  for (const key of pathTrail) {\n    penultimateRef = penultimateRef[key]\n  }\n\n  return {\n    finalRef : penultimateRef[finalKey],\n    penultimateRef,\n    finalKey\n  }\n}\n\n// aliases for 'import * as fjson; fjson.write()' style\nconst write = writeFJSON\nconst read = readFJSON\n\nexport {\n  addMountPoint, readFJSON, setSource, writeFJSON, // standard interface\n  FJSON_META_DATA_KEY, // possibly useful? may be removed before '1.0'\n  write, read // aliases\n}\n"],"names":["replaceRE","envTemplateString","path","origPath","matches","matchAll","reverse","matchInfo","match","key","value","process","env","matchStart","index","undefined","Error","substring","length","FJSON_META_DATA_KEY","addMountPoint","data","dataPath","dataFile","mountSpecs","getMountSpecs","myMeta","ensureMyMeta","i","findIndex","el","mountSpec","push","readFJSON","filePath","options","rememberSource","processedPath","fs","msg","dataBits","JSON","parse","setSource","mntSpec","processMountSpec","mountPoint","finalKey","subData","getLinkSpecs","lnkSpec","processLinkSpec","finalRef","source","keyName","penultimateRef","getRealItem","soure","find","candidate","linkTo","Array","isArray","realItems","map","splice","_typeof","Object","keys","sourceFile","writeFJSON","getMyMeta","dataString","stringify","_meta","processJSONPath","linkSpecs","linkRefs","linkKey","pathTrail","split","pop","write","read"],"mappings":"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"}